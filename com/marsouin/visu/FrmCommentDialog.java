/* 
 * Copyright (C) 2014 Marc Segond <dr.marc.segond@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.marsouin.visu;

public class FrmCommentDialog extends javax.swing.JDialog {

    private String nomConfig;
    private final Memory mem;
    private String commentaireConfig;

    public FrmCommentDialog(java.awt.Frame parent, boolean modal,Memory m,String nom) {
        super(parent, modal);
        mem=m;
        initComponents();

        nomConfig = nom;
        jTextFieldNomConfig.setText(nomConfig);

        commentaireConfig = (String)mem.getConfigHistoFile().listerCommentaireConfig().get(
                                mem.getConfigHistoFile().listerNomConfig().indexOf(nomConfig));

        if (commentaireConfig==null)
            commentaireConfig = "";

        jTextAreaCommentaire.setText(commentaireConfig);

        jTextAreaCommentaire.setLineWrap(true);
        jTextAreaCommentaire.setWrapStyleWord(true);
        jTextAreaCommentaire.setEditable(true);
        jTextAreaCommentaire.setFont(new java.awt.Font(
                    "Times-Roman", java.awt.Font.PLAIN, 14));
        //this.pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel2 = new javax.swing.JPanel();
        jLabeln = new javax.swing.JLabel();
        jTextFieldNomConfig = new javax.swing.JTextField();
        jButtonRename = new javax.swing.JButton();
        jScrollPaneComm = new javax.swing.JScrollPane();
        jTextAreaCommentaire = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jButtonSauverComm = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonAppliquer = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.BorderLayout(5, 5));

        setTitle("Parameter set");
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel2.setLayout(new java.awt.BorderLayout(15, 0));

        jLabeln.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabeln.setText("Name :");
        jPanel2.add(jLabeln, java.awt.BorderLayout.WEST);

        jTextFieldNomConfig.setEditable(false);
        jTextFieldNomConfig.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNomConfig.setText("jTextField1");
        jPanel2.add(jTextFieldNomConfig, java.awt.BorderLayout.CENTER);

        jButtonRename.setText("Rename !");
        jButtonRename.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonRename.setPreferredSize(new java.awt.Dimension(103, 26));
        jButtonRename.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRenameActionPerformed(evt);
            }
        });

        jPanel2.add(jButtonRename, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jTextAreaCommentaire.setColumns(10);
        jTextAreaCommentaire.setLineWrap(true);
        jTextAreaCommentaire.setRows(15);
        jTextAreaCommentaire.setText("Comment");
        jTextAreaCommentaire.setWrapStyleWord(true);
        jScrollPaneComm.setViewportView(jTextAreaCommentaire);

        getContentPane().add(jScrollPaneComm, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        jButtonSauverComm.setText("Save comment");
        jButtonSauverComm.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSauverCommActionPerformed(evt);
            }
        });

        jPanel1.add(jButtonSauverComm);

        jButtonAnnuler.setText("Delete");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jPanel1.add(jButtonAnnuler);

        jButtonAppliquer.setText("Apply");
        jButtonAppliquer.setSelected(true);
        jButtonAppliquer.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAppliquerActionPerformed(evt);
            }
        });

        jPanel1.add(jButtonAppliquer);

        jButtonSupprimer.setText("Cancel");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jPanel1.add(jButtonSupprimer);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void jButtonRenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRenameActionPerformed
        // Add your handling code here:
        if(!jTextFieldNomConfig.isEditable()) {
            //System.out.println("");
            jButtonRename.setText("OK");
            jTextFieldNomConfig.setEditable(true);
        }
        else {
            //System.out.println("toggle button deselected");
            if ((!jTextFieldNomConfig.getText().contains(" "))&&(!"".equals(jTextFieldNomConfig.getText()))
                    &&(!mem.getConfigHistoFile().listerNomConfig().contains(jTextFieldNomConfig.getText()))) {

                jButtonRename.setText("Rename !");
                jTextFieldNomConfig.setEditable(false);
                mem.getConfigHistoFile().renommerConfig(nomConfig,jTextFieldNomConfig.getText());
                nomConfig = jTextFieldNomConfig.getText();
            }
            else {
                System.out.println("mauvais nom");
                jButtonRename.setText("retry !");
            }
            //mem.getConfigHistoFile().renommerConfig(nomConfig,jTextFieldNomConfig.getText());
        }
    }//GEN-LAST:event_jButtonRenameActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        // Add your handling code here:
        mem.getConfigHistoFile().supprimerConfig(nomConfig);
        this.dispose();
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jButtonAppliquerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAppliquerActionPerformed
        // Add your handling code here:
        mem.getConfigHistoFile().appliquerConfig(nomConfig,mem.getFrmConfig());
        this.dispose();
    }//GEN-LAST:event_jButtonAppliquerActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        // Add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jButtonSauverCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSauverCommActionPerformed
        // Add your handling code here:
        commentaireConfig = jTextAreaCommentaire.getText();
        mem.getConfigHistoFile().setCommentaire(nomConfig,commentaireConfig);

        this.dispose();
    }//GEN-LAST:event_jButtonSauverCommActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
     * @param args the command line arguments

    public static void main(String args[]) {
        new FrmCommentDialog(new javax.swing.JFrame(), true).show();
    }
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextArea jTextAreaCommentaire;
    private javax.swing.JTextField jTextFieldNomConfig;
    private javax.swing.JButton jButtonSauverComm;
    private javax.swing.JButton jButtonRename;
    private javax.swing.JButton jButtonAppliquer;
    private javax.swing.JScrollPane jScrollPaneComm;
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JLabel jLabeln;
    // End of variables declaration//GEN-END:variables

}
