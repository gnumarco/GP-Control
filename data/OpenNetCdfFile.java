/*
 * openFile.java
 *
 * Created on 13 aout 2004, 16:39
 */

package data;

import java.io.IOException;
import ucar.nc2.*;

/**
 *
 * @author  marco
 */
public class OpenNetCdfFile extends javax.swing.JDialog {
    
    String fichierNetcdf;
    private int profs[] = null;
    private String times[] = null;
    private boolean ok = false;
    private NetcdfFile monFichier = null;
    
    /** Creates new form openFile */
    public OpenNetCdfFile(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public OpenNetCdfFile(java.awt.Frame parent, boolean modal, String fich) {
        super(parent, modal);
        initComponents();
        fichierNetcdf = fich;
        try{
            monFichier = new NetcdfFile(fichierNetcdf);
        }catch(IOException e){System.out.println(e.toString());}
        lireNetCDF(fichierNetcdf);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        donneesX = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        donneesY = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        profsDispos = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButtonOK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        cartesDispos = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pasDeProfs = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jComboMissingValue = new javax.swing.JComboBox();
        jCheckBoxNoMissingValue = new javax.swing.JCheckBox();
        jTextFieldMissingValue = new javax.swing.JTextField();
        statusBar = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select variables to display");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                closing(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Variable containing x-axis projections:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Variable containing y-axis projections:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel2, gridBagConstraints);

        jScrollPane3.setAutoscrolls(true);
        donneesX.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        donneesX.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                donneesXValueChanged(evt);
            }
        });

        jScrollPane3.setViewportView(donneesX);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane3, gridBagConstraints);

        donneesY.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        donneesY.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                donneesYValueChanged(evt);
            }
        });

        jScrollPane2.setViewportView(donneesY);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane2, gridBagConstraints);

        profsDispos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        profsDispos.setEnabled(false);
        jScrollPane4.setViewportView(profsDispos);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane4, gridBagConstraints);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jButton2, gridBagConstraints);

        jButtonOK.setText("OK");
        jButtonOK.setEnabled(false);
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jButtonOK, gridBagConstraints);

        jScrollPane1.setAutoscrolls(true);
        cartesDispos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        cartesDispos.setDoubleBuffered(true);
        cartesDispos.setEnabled(false);
        jScrollPane1.setViewportView(cartesDispos);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jLabel3.setText("Levels dimension:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Dates dimension:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel4, gridBagConstraints);

        pasDeProfs.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 10));
        pasDeProfs.setText("No level dimension");
        pasDeProfs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasDeProfsActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(pasDeProfs, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Missing value attribute:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jLabel5, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jComboMissingValue.setEnabled(false);
        jComboMissingValue.setMaximumSize(new java.awt.Dimension(23, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jComboMissingValue, gridBagConstraints);

        jCheckBoxNoMissingValue.setText("Set missing value");
        jCheckBoxNoMissingValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNoMissingValueActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jCheckBoxNoMissingValue, gridBagConstraints);

        jTextFieldMissingValue.setText("0.0");
        jTextFieldMissingValue.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jTextFieldMissingValue, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        statusBar.setFont(new java.awt.Font("Arial", 2, 10));
        statusBar.setText("statusBar");
        statusBar.setAutoscrolls(true);
        statusBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        getContentPane().add(statusBar, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-572)/2, (screenSize.height-392)/2, 572, 392);
    }// </editor-fold>//GEN-END:initComponents

    private void closing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closing
        System.out.println("closing chooser");
        try{
        monFichier.close();
        }catch(IOException e){System.out.println(e.toString());}
        monFichier = null;
    }//GEN-LAST:event_closing
    
    private void jCheckBoxNoMissingValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNoMissingValueActionPerformed
        if(jCheckBoxNoMissingValue.isSelected()){
            jComboMissingValue.setEnabled(false);
            jTextFieldMissingValue.setEnabled(true);
        }
        
        else{
            jComboMissingValue.setEnabled(true);
            jTextFieldMissingValue.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBoxNoMissingValueActionPerformed
    
    private void annulerClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerClicked
        ok = false;
        this.setVisible(false);
    }//GEN-LAST:event_annulerClicked
    
    private void pasDeProfsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasDeProfsActionPerformed
        if(pasDeProfs.isSelected())
            profsDispos.setEnabled(false);
        else
            profsDispos.setEnabled(true);
    }//GEN-LAST:event_pasDeProfsActionPerformed
    
    private void donneesYValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_donneesYValueChanged
        if(checkCoherence()){
            jButtonOK.setEnabled(true);
            statusBar.setText("The two variables have the same dimensions, ready to open file");
            try{
                if((donneesX.getSelectedIndex()>=0) && (donneesY.getSelectedIndex()>=0)){
                    Variable v1 = (Variable)(monFichier.getVariables().get(donneesX.getSelectedIndex()));
                    Variable v2 = (Variable)(monFichier.getVariables().get(donneesY.getSelectedIndex()));
                    String[] tmp = new String[v1.getDimensions().size()];
                    for(int i=0;i<v1.getDimensions().size();i++){
                        tmp[i] = v1.getDimension(i).getName();
                    }
                    profsDispos.setListData(tmp);
                    cartesDispos.setListData(tmp);
                    jComboMissingValue.removeAllItems();
                    for(int i=0;i<v1.getAttributes().size();i++){
                        jComboMissingValue.addItem(((Attribute)(v1.getAttributes().get(i))).getName());
                    }
                }
            }catch(java.lang.Exception e){System.out.println(e.toString());}
            profsDispos.setEnabled(true);
            cartesDispos.setEnabled(true);
            jComboMissingValue.setEnabled(true);
        }else{
            jButtonOK.setEnabled(false);
            jComboMissingValue.setEnabled(false);
            profsDispos.setEnabled(false);
            cartesDispos.setEnabled(false);
            statusBar.setText("The two variables don't have the same dimensions, can't open file");
        }
    }//GEN-LAST:event_donneesYValueChanged
    
    private void donneesXValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_donneesXValueChanged
        if(checkCoherence()){
            jButtonOK.setEnabled(true);
            statusBar.setText("The two variables have the same dimensions, ready to open file");
            try{
                if((donneesX.getSelectedIndex()>=0) && (donneesY.getSelectedIndex()>=0)){
                    Variable v1 = (Variable)(monFichier.getVariables().get(donneesX.getSelectedIndex()));
                    Variable v2 = (Variable)(monFichier.getVariables().get(donneesY.getSelectedIndex()));
                    String[] tmp = new String[v1.getDimensions().size()];
                    for(int i=0;i<v1.getDimensions().size();i++){
                        tmp[i] = v1.getDimension(i).getName();
                    }
                    profsDispos.setListData(tmp);
                    cartesDispos.setListData(tmp);
                    jComboMissingValue.removeAllItems();
                    for(int i=0;i<v1.getAttributes().size();i++){
                        jComboMissingValue.addItem(((Attribute)(v1.getAttributes().get(i))).getName());
                    }
                }
            }catch(java.lang.Exception e){System.out.println(e.toString());}
            profsDispos.setEnabled(true);
            cartesDispos.setEnabled(true);
            jComboMissingValue.setEnabled(true);
        }else{
            jButtonOK.setEnabled(false);
            statusBar.setText("The two variables don't have the same dimensions, can't open file");
            profsDispos.setEnabled(false);
            cartesDispos.setEnabled(false);
            jComboMissingValue.setEnabled(false);
        }
    }//GEN-LAST:event_donneesXValueChanged
    
    private boolean checkCoherence(){
        boolean res = false;
        try{
            if((donneesX.getSelectedIndex()>=0) && (donneesY.getSelectedIndex()>=0)){
                Variable v1 = (Variable)(monFichier.getVariables().get(donneesX.getSelectedIndex()));
                Variable v2 = (Variable)(monFichier.getVariables().get(donneesY.getSelectedIndex()));
                if(v1.getDimensions().size()==v2.getDimensions().size()){
                    res = true;
                    for(int i=0;i<v1.getDimensions().size();i++){
                        if(!v1.getDimension(i).getName().equals(v2.getDimension(i).getName()))
                            res=false;
                    }
                }
            }
        }catch(java.lang.Exception e){System.out.println(e.toString());}
        return res;
    }
    
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        ok = true;
        this.setVisible(false);
    }//GEN-LAST:event_jButtonOKActionPerformed
    
    public final void lireNetCDF(String s){
        try{
            //lecture des variables dispos
            java.util.List l = monFichier.getVariables();
            String[] tmp = new String[l.size()];
            for(int i=0;i<l.size();i++){
                tmp[i] = ((Variable)(l.get(i))).getName();
            }
            donneesX.setListData(tmp);
            donneesY.setListData(tmp);
            donneesX.setSelectedIndex(0);
            donneesY.setSelectedIndex(1);
            profsDispos.setListData(tmp);
            cartesDispos.setListData(tmp);
            System.gc();
        }catch(java.lang.Exception e){System.out.println("Error in lireNetCDF: "+e.toString());}
    }
    
    public Courant[][] getMer(){ return mer;}
    public int getProfsIndex(){
        int ret;
        if(pasDeProfs.isSelected())
            ret = -1;
        else
            ret = profsDispos.getSelectedIndex();
        return ret;
    }
    
    public boolean getNoMissingValueState(){return jCheckBoxNoMissingValue.isSelected();}
    
    public String getMissingValueAttribute(){
        if(this.jCheckBoxNoMissingValue.isSelected())
            return jTextFieldMissingValue.getText();
        else
            return (String)(jComboMissingValue.getSelectedItem());
    }
    public int getUIndex(){return donneesX.getSelectedIndex();}
    public int getVIndex(){return donneesY.getSelectedIndex();}
    public int getTimesIndex(){return cartesDispos.getSelectedIndex();}
    public String getDatesDimName(){return (String)(cartesDispos.getSelectedValue());}
    public String getLevelsDimName(){return (String)(profsDispos.getSelectedValue());}
    public boolean getOK(){return ok;}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList cartesDispos;
    private javax.swing.JList donneesX;
    private javax.swing.JList donneesY;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JCheckBox jCheckBoxNoMissingValue;
    private javax.swing.JComboBox jComboMissingValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextFieldMissingValue;
    private javax.swing.JCheckBox pasDeProfs;
    private javax.swing.JList profsDispos;
    private javax.swing.JLabel statusBar;
    // End of variables declaration//GEN-END:variables
    Courant[][] mer = null;
}
